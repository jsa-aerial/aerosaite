[{:code2 {:label "Templates", :opts {:order :row, :eltsper 1, :size "auto", :wrapfn {:tid :code2, :$split nil, :out-width "1300px", :fn [quote editor-repl-tab], :layout :left-right, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n:cljs\n\n(def use-defaults? :aerial.hanami.common/use-defaults?)\n\n(defn xframes [frame-map & {:keys [defaults?] :or {defaults? false}}]\n  (let [submap (merge {use-defaults? defaults?} frame-map)]\n    (hc/xform\n     (hc/get-default :USERDATA)\n     submap)))\n\n(defn xc\n  ([comps submap]\n   (hc/xform comps submap))\n  ([comps k v & kvs]\n   (apply hc/xform comps k v kvs)))\n\n(def sidebar\n  [['p {:style {:width \"50px\" :min-width \"50px\"}}]\n   ['v-box :children\n    :components]])\n\n(def top\n  [['gap :size :TOPGAP]\n   ['v-box :children\n    :components]])\n\n\n(def sliderInput\n  '[v-box :children\n    [[label :label [:span.bold :SLIDER-LBL]]\n     [h-box :children\n      [[label :label :MINLBL]\n       [slider\n        :model :SLIDER-MODEL\n        :min :MIN, :max :MAX, :step :STEP\n        :width :SLIDER-WIDTH\n        :on-change :SLIDER-CHG-FNSYM]\n       [label :label :MAXLBL]]]]])\n\n\n(def singleDropdown\n  ['v-box\n   :children\n   [['label :label [:span.bold :DROPDOWN-LBL]]\n    ['single-dropdown\n     :choices :CHOICES\n     :on-change :DROPDOWN-CHG-FNSYM\n     :model :DROPDOWN-MODEL\n     :placeholder :PLACEHOLDER\n     :width :DROPDOWN-WIDTH]]])\n\n\n(def textInput\n  '[input-text\n    :model :INPUT-MODEL\n    :width \"60px\", :height \"26px\"\n    :on-change :INPUT-CHG-FNSYM])\n\n(def markdown\n  ['md {:style {:font-size \"24px\" :width \"1000px\"}}\n   :MDTXT])\n\n(def slider-hist\n  (-> ht/view-base\n    (assoc :mark (merge ht/mark-base {:type \"bar\"})\n           :encoding :BINNED-ENCODING\n           :usermeta\n           (xframes\n            {:TOP (xc top use-defaults? false :components [markdown])\n             :LEFT (xc sidebar\n                       use-defaults? false\n                       :components [sliderInput textInput])}))))\n\n\n(def layer-hist\n  (-> ht/layer-chart\n    (assoc :usermeta (xframes\n                      {:TOP (xc top use-defaults? false :components [markdown])\n                       :LEFT sidebar})\n           :layer [(hc/xform\n                    ht/bar-chart :WIDTH 700\n                    :XTITLE \"Duration (in minutes)\"\n                    :ENCODING :BINNED-ENCODING :Y :Frequency\n                    :DATA :bin-data)\n                   (hc/xform\n                    ht/line-chart :WIDTH 700 :MCOLOR \"red\"\n                    :DATA :den-data)]\n           :resolve{:scale {\"y\" \"independent\" \"x\" \"independent\"}})))\n\n\n\n;;; Add new defaults in suport of the above templates!\n;;;\n(hc/update-defaults\n :BINNED-ENCODING\n {:x {:field :bin_start :type :quantitative\n      :bin {:binned true :step 2}\n      :title :XTITLE}\n  :x2 {:field :bin_end}\n  :y {:field :Y :type :quantitative}}\n :TOPGAP \"500px\" :MDTXT \"Your text here\"\n :SLIDER-LBL \"**Slider Lable**\"\n :SLIDER-WIDTH \"200px\" :STEP 1.0 \n :MIN 0 :MINLBL #(-> % :MIN str)\n :MAX 10 :MAXLBL #(-> % :MAX str)\n :DROPDOWN-MODEL nil :DROPDOWN-WIDTH \"150px\"\n :INPUT-CHG-FNSYM #(-> % :SLIDER-CHG-FNSYM)\n :INPUT-MODEL #(-> % :SLIDER-MODEL))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:end", :out-height "900px", :eid "ed-code2", :height "900px"}}, :specs []}} {:code {:label "Code", :opts {:order :row, :eltsper 1, :size "auto", :wrapfn {:tid :code, :$split nil, :out-width "1300px", :fn [quote editor-repl-tab], :layout :left-right, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n:clj\n\n(deps '[[techascent/tech.ml.dataset \"5.00-beta-27\"]])\n(require '[tech.v3.dataset :as ds]\n         '[tech.v3.datatype :as dtype])\n\n(def home-data \"https://raw.githubusercontent.com/jsa-aerial/saite/master/examples/Data/\")\n\n(def faithful\n  (ds/->dataset (fs/join home-data \"faithful.csv\") {:key-fn keyword}))\n\n;;;(ds/filter #(< 50 (% :waiting) 52) faithful)\n;;;(-> faithful (ds/column :waiting) (dtype/->reader :int) vec)\n;;;(-> faithful (ds/column :waiting) (->> (apply max)))\n\n(defn roundit [r & {:keys [places] :or {places 2}}]\n  (let [n (Math/pow 10.0 places)]\n    (-> r (* n) Math/round (/ n))))\n\n\n(defn rseq [b e & {:keys [by len]}]\n  (let [b (float b) e (float e)\n        len (float (or len (-> e (- b))))\n        step (float (or by (-> e (- b) (/ (dec len)))))\n        sq (mapv #(roundit % :places 5) (range b e step))]\n    (if (== (count sq) len) sq (conj sq e))))\n\n;;;(rseq -2.0 2.0 :len 10.0)\n;;;(rseq 43.0 96.0 :len 31.0)\n\n\n(defn bins [len]\n  (let [x (-> faithful (ds/column :waiting))\n        breaks (rseq (apply min x) (apply max x) :len (float len))]\n    (->> breaks (coll/sliding-take 2) (coll/takev-while #(= 2 (count %)))\n      (mapv (fn[[b e]]\n              {:bin_start b\n               :bin_end e\n               :Frequency (ds/row-count\n                           (ds/filter faithful #(<= b (% :waiting) e)))})))))\n;;;(bins 31)\n\n\n:cljs\n\n(def quake-schema\n  [:Y :Frequency :WIDTH 700\n   :XTITLE \"Waiting time to next eruption (in minutes)\"])\n\n\n:mixed\n\n(defn slider-fn [val model]\n  (let [spec-frame-pairs (hmi/get-cur-tab :spec-frame-pairs)\n        data (clj (bins val))]\n    (reset! model (str val))\n    (hmi/visualize\n     (apply hc/xform ht/bar-chart :DATA data quake-schema)\n     (js/document.getElementById \"v1\"))))\n\n:cljs\n\n(let [sval (sc/add-ratom :m1 \"31\")\n      chgfn #(slider-fn % sval)]\n  (sc/add-symxlate 'slider-fn chgfn))\n\n\n:mixed\n\n(defn slider-fn-2 [val model]\n  (let [spec-frame-pairs (hmi/get-cur-tab :spec-frame-pairs)\n        data (clj (bins val))]\n    (reset! model (str val))\n    (hmi/visualize\n     (apply hc/xform slider-hist :DATA data quake-schema)\n     (js/document.getElementById \"hist1\"))))\n\n:cljs\n(let [sval (sc/add-ratom :m2 \"31\")\n      chgfn #(slider-fn-2 % sval)]\n  (sc/add-symxlate 'slider-fn-2 chgfn))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:end", :out-height "900px", :eid "ed-code", :height "900px"}}, :specs []}} {:chart1 {:label "Charts", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :chart1, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 0}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n(let [begcnt 31\n      data (clj (bins begcnt))]\n  (hc/xform\n   slider-hist :FID :f2 :VID :hist1\n   :WIDTH 700\n   :XTITLE \"Waiting time to next eruption (in minutes)\"\n   :Y :Frequency\n   :DATA data\n   :SLIDER-MODEL (sc/add-ratom :m2 (str begcnt)) :SLIDER-CHG-FNSYM 'slider-fn-2\n   :MIN 5 :MAX 51\n   :SLIDER-LBL \"Number of bins\"\n   :MDTXT \"**Histogram of Waiting Times**\"))\n\n\n\n:end", :out-height "100px", :eid "ed-chart1", :height "790px"}}, :specs [{:encoding {:y {:field :Frequency, :type :quantitative}, :x {:field :bin_start, :type :quantitative, :title "Waiting time to next eruption (in minutes)", :bin {:binned true, :step 2}}, :x2 {:field :bin_end}}, :usermeta {:frame {:top [[gap :size "500px"] [v-box :children [[md {:style {:font-size "24px", :width "1000px"}} "**Histogram of Waiting Times**"]]]], :pos :after, :at :end, :fid :f2, :left [[p {:style {:min-width "50px", :width "50px"}}] [v-box :children [[v-box :children [[label :label [:span.bold "Number of bins"]] [h-box :children [[label :label "5"] [slider :model {:RATOM "17", :id :m2} :min 5 :max 51 :step 1 :width "200px" :on-change slider-fn-2] [label :label "51"]]]]] [input-text :model {:RATOM "17", :id :m2} :width "60px" :height "26px" :on-change slider-fn-2]]]]}, :vid :hist1, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Chart1", :id :chart1, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}, :mark {:type "bar"}, :width 700, :background "floralwhite", :height 300, :data {:values [{:bin_start 43, :Frequency 1, :bin_end 44.76667} {:bin_start 44.76667, :Frequency 8, :bin_end 46.53333} {:bin_start 46.53333, :Frequency 7, :bin_end 48.3} {:bin_start 48.3, :Frequency 10, :bin_end 50.06667} {:bin_start 50.06667, :Frequency 6, :bin_end 51.83333} {:bin_start 51.83333, :Frequency 12, :bin_end 53.6} {:bin_start 53.6, :Frequency 15, :bin_end 55.36667} {:bin_start 55.36667, :Frequency 7, :bin_end 57.13333} {:bin_start 57.13333, :Frequency 4, :bin_end 58.9} {:bin_start 58.9, :Frequency 13, :bin_end 60.66667} {:bin_start 60.66667, :Frequency 4, :bin_end 62.43333} {:bin_start 62.43333, :Frequency 7, :bin_end 64.2} {:bin_start 64.2, :Frequency 3, :bin_end 65.96667} {:bin_start 65.96667, :Frequency 3, :bin_end 67.73333} {:bin_start 67.73333, :Frequency 3, :bin_end 69.5} {:bin_start 69.5, :Frequency 9, :bin_end 71.26667} {:bin_start 71.26667, :Frequency 8, :bin_end 73.03333} {:bin_start 73.03333, :Frequency 6, :bin_end 74.8} {:bin_start 74.8, :Frequency 17, :bin_end 76.56667} {:bin_start 76.56667, :Frequency 27, :bin_end 78.33333} {:bin_start 78.33333, :Frequency 18, :bin_end 80.1} {:bin_start 80.1, :Frequency 13, :bin_end 81.86667} {:bin_start 81.86667, :Frequency 26, :bin_end 83.63333} {:bin_start 83.63333, :Frequency 16, :bin_end 85.4} {:bin_start 85.4, :Frequency 8, :bin_end 87.16667} {:bin_start 87.16667, :Frequency 6, :bin_end 88.93333} {:bin_start 88.93333, :Frequency 9, :bin_end 90.7} {:bin_start 90.7, :Frequency 2, :bin_end 92.46667} {:bin_start 92.46667, :Frequency 3, :bin_end 94.23333} {:bin_start 94.23333, :Frequency 1, :bin_end 96}]}}]}} {:Rcode {:label "R", :opts {:order :row, :eltsper 1, :size "auto", :wrapfn {:tid :Rcode, :$split nil, :out-width "1300px", :fn [quote editor-repl-tab], :layout :left-right, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n:clj\n\n(deps '[[scicloj/clojisr \"1.0.0-BETA17\"]])\n\n(require\n '[clojisr.v1.r :as r :refer\n   [r r->clj clj->r ->code r+\n    ;eval-r->java r->java java->r\n    ;java->clj java->naive-clj clj->java colon\n    ]]\n '[clojisr.v1.robject :as robject]\n '[clojisr.v1.session :as session]\n '[clojisr.v1.rserve :as rserve])\n\n(rserve/set-as-default!)\n(r/discard-all-sessions)\n\n;;;(do\n;;;  (r \"x = faithful$eruptions\")\n;;;  (r \"breaks = seq(min(x), max(x), length.out = 20)\")\n;;;  (def rbreaks (-> (r \"breaks\") r->clj)))\n\n\n(r \"x = faithful$eruptions\")\n(defn rbins [len]\n  (let [rcd (format \"seq(min(x), max(x), length.out = %s)\" len)\n        breaks (-> rcd r r->clj)]\n    (->> breaks (coll/sliding-take 2) (coll/takev-while #(= 2 (count %)))\n      (mapv (fn[[b e]]\n              {:bin_start b\n               :bin_end e\n               :Frequency (ds/row-count\n                           (ds/filter faithful #(<= b (% :eruptions) e)))})))))\n\n(defn density [bw]\n  (let [rcd (format \"density(faithful$eruptions, adjust = %s)\" bw)]\n    (-> rcd r r->clj)))\n\n(defn gen-den-data [val]\n  (let [den (density val)]\n    (take-nth 5 (mapv (fn[x y] {:x (roundit x :places 2)\n                                :y (roundit y :places 4)})\n                      (den :x) (den :y)))))\n\n:none\n(take 10 (clj (let [den (density 1.0)]\n                (mapv (fn[x y] {:x x :y y}) (den :x) (den :y)))))\n\n\n:cljs\n(def dendata (atom nil))\n(def bindata (atom nil))\n(def Rquake-schema [:Y :Frequency :XTITLE \"Duration (in minutes)\"])\n\n\n:mixed\n(let [den-data (clj (gen-den-data 1.0))]\n  (reset! dendata den-data) :done)\n\n(defn bins-fn [val vid model]\n  (let [spec-frame-pairs (hmi/get-cur-tab :spec-frame-pairs)\n        den-data (-> dendata deref)\n        bin-data (clj (rbins val))]\n    (reset! model (str val))\n    (hmi/visualize\n     (apply hc/xform layer-hist\n            :bin-data bin-data :den-data den-data Rquake-schema)\n     (js/document.getElementById (name vid)))))\n\n(defn density-fn [val vid model]\n  (let [spec-frame-pairs (hmi/get-cur-tab :spec-frame-pairs)\n        bincnt (-> :m3 sc/get-ratom deref js/parseInt)\n        bin-data (clj (rbins bincnt))\n        den-data (clj (gen-den-data val))]\n    (reset! dendata den-data)\n    (reset! model (str val))\n    (hmi/visualize\n     (apply hc/xform layer-hist\n            :bin-data bin-data :den-data den-data Rquake-schema)\n     (js/document.getElementById (name vid)))))\n\n:cljs\n(let [sval (sc/add-ratom :m3 \"20\")\n      chgfn #(bins-fn % :rhist sval)]\n  (sc/add-symxlate 'bins-fn chgfn))\n\n(let [sval (sc/add-ratom :m4 \"1.0\")\n      chgfn #(density-fn % :rhist sval)]\n  (sc/add-symxlate 'density-fn chgfn))\n\n\n\n\n\n\n\n\n\n\n:end", :out-height "900px", :eid "ed-Rcode", :height "900px"}}, :specs []}} {:chart12 {:label "Charts 2", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :chart12, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:vis 1, :cm 0, :fm 1}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n\n(let [begcnt 20\n      begden 1.0\n      den-data (clj (gen-den-data  begden))\n      bin-data (clj (rbins begcnt))]\n  (reset! dendata den-data)\n  (hc/xform\n   layer-hist\n   :FID :f1 :VID :rhist :WIDTH 700\n   :MDTXT \"Geyser Eruption Duration\"\n   :XTITLE \"Duration (in minutes)\"\n   :components [(xc ['v-box :children [sliderInput textInput]]\n                    :SLIDER-LBL \"Number of bins\"\n                    :MIN 10 :MAX 50\n                    :SLIDER-MODEL (sc/add-ratom :m3 (str begcnt))\n                    :SLIDER-CHG-FNSYM 'bins-fn)\n                ['gap :size \"100px\"]\n                (xc ['v-box :children [sliderInput textInput]]\n                    :SLIDER-LBL \"Density bandwidth\"\n                    :MIN 0.2 :MAX 2.0 :STEP 0.2\n                    :SLIDER-MODEL (sc/add-ratom :m4 (str begden))\n                    :SLIDER-CHG-FNSYM 'density-fn)]\n   :bin-data bin-data\n   :den-data den-data))\n\n\n\n\n\n\n\n\n\n:end", :out-height "100px", :eid "ed-chart12", :height "790px"}}, :specs [{:usermeta {:frame {:top [[gap :size "500px"] [v-box :children [[md {:style {:font-size "24px", :width "1000px"}} "Geyser Eruption Duration"]]]], :pos :after, :at :end, :fid :f1, :left [[p {:style {:min-width "50px", :width "50px"}}] [v-box :children [[v-box :children [[v-box :children [[label :label [:span.bold "Number of bins"]] [h-box :children [[label :label "10"] [slider :model {:RATOM "39", :id :m3} :min 10 :max 50 :step 1 :width "200px" :on-change bins-fn] [label :label "50"]]]]] [input-text :model {:RATOM "39", :id :m3} :width "60px" :height "26px" :on-change bins-fn]]] [gap :size "100px"] [v-box :children [[v-box :children [[label :label [:span.bold "Density bandwidth"]] [h-box :children [[label :label "0.2"] [slider :model {:RATOM "0.6", :id :m4} :min 0.2 :max 2 :step 0.2 :width "200px" :on-change density-fn] [label :label "2"]]]]] [input-text :model {:RATOM "0.6", :id :m4} :width "60px" :height "26px" :on-change density-fn]]]]]]}, :vid :rhist, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Chart12", :id :chart12, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}, :config {:bar {:discreteBandSize 5, :binSpacing 1, :continuousBandSize 5}}, :width 700, :background "floralwhite", :layer [{:encoding {:y {:field :Frequency, :type :quantitative}, :x {:field :bin_start, :type :quantitative, :title "Duration (in minutes)", :bin {:binned true, :step 2}}, :x2 {:field :bin_end}}, :usermeta {:frame {:pos :after, :at :end}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Chart12", :id :chart12, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}, :mark {:type "bar"}, :width 700, :background "floralwhite", :height 300, :data {:values [{:bin_start 1.6, :Frequency 12, :bin_end 1.7842105263157895} {:bin_start 1.7842105263157895, :Frequency 36, :bin_end 1.968421052631579} {:bin_start 1.968421052631579, :Frequency 20, :bin_end 2.1526315789473687} {:bin_start 2.1526315789473687, :Frequency 16, :bin_end 2.336842105263158} {:bin_start 2.336842105263158, :Frequency 8, :bin_end 2.5210526315789474} {:bin_start 2.5210526315789474, :Frequency 2, :bin_end 2.705263157894737} {:bin_start 2.705263157894737, :Frequency 2, :bin_end 2.889473684210526} {:bin_start 2.889473684210526, :Frequency 2, :bin_end 3.0736842105263156} {:bin_start 3.0736842105263156, :Frequency 0, :bin_end 3.257894736842105} {:bin_start 3.257894736842105, :Frequency 5, :bin_end 3.442105263157895} {:bin_start 3.442105263157895, :Frequency 9, :bin_end 3.626315789473684} {:bin_start 3.626315789473684, :Frequency 6, :bin_end 3.8105263157894735} {:bin_start 3.8105263157894735, :Frequency 16, :bin_end 3.994736842105263} {:bin_start 3.994736842105263, :Frequency 30, :bin_end 4.178947368421053} {:bin_start 4.178947368421053, :Frequency 25, :bin_end 4.363157894736842} {:bin_start 4.363157894736842, :Frequency 32, :bin_end 4.5473684210526315} {:bin_start 4.5473684210526315, :Frequency 26, :bin_end 4.731578947368421} {:bin_start 4.731578947368421, :Frequency 18, :bin_end 4.91578947368421} {:bin_start 4.91578947368421, :Frequency 7, :bin_end 5.1}]}} {:encoding {:y {:field "y", :type "quantitative"}, :x {:field "x", :type "quantitative"}}, :usermeta {:frame {:pos :after, :at :end}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Chart12", :id :chart12, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}, :mark {:color "red", :type "line"}, :width 700, :background "floralwhite", :height 300, :data {:values [{:y 3.0E-4, :x 0.6} {:y 6.0E-4, :x 0.65} {:y 0.001, :x 0.7} {:y 0.0016, :x 0.76} {:y 0.0027, :x 0.81} {:y 0.0042, :x 0.87} {:y 0.0065, :x 0.92} {:y 0.0097, :x 0.97} {:y 0.0143, :x 1.03} {:y 0.0206, :x 1.08} {:y 0.0289, :x 1.13} {:y 0.0397, :x 1.19} {:y 0.0533, :x 1.24} {:y 0.0699, :x 1.3} {:y 0.0897, :x 1.35} {:y 0.1125, :x 1.4} {:y 0.1381, :x 1.46} {:y 0.1658, :x 1.51} {:y 0.1949, :x 1.57} {:y 0.2242, :x 1.62} {:y 0.2526, :x 1.67} {:y 0.2788, :x 1.73} {:y 0.3017, :x 1.78} {:y 0.3201, :x 1.84} {:y 0.3332, :x 1.89} {:y 0.3404, :x 1.94} {:y 0.3417, :x 2} {:y 0.337, :x 2.05} {:y 0.3269, :x 2.1} {:y 0.312, :x 2.16} {:y 0.2932, :x 2.21} {:y 0.2716, :x 2.27} {:y 0.2482, :x 2.32} {:y 0.2239, :x 2.37} {:y 0.1996, :x 2.43} {:y 0.1762, :x 2.48} {:y 0.1542, :x 2.54} {:y 0.1342, :x 2.59} {:y 0.1164, :x 2.64} {:y 0.1012, :x 2.7} {:y 0.0886, :x 2.75} {:y 0.0788, :x 2.81} {:y 0.0715, :x 2.86} {:y 0.0668, :x 2.91} {:y 0.0646, :x 2.97} {:y 0.0648, :x 3.02} {:y 0.0673, :x 3.08} {:y 0.072, :x 3.13} {:y 0.0788, :x 3.18} {:y 0.0877, :x 3.24} {:y 0.0986, :x 3.29} {:y 0.1115, :x 3.34} {:y 0.1263, :x 3.4} {:y 0.143, :x 3.45} {:y 0.1615, :x 3.51} {:y 0.1818, :x 3.56} {:y 0.2037, :x 3.61} {:y 0.2271, :x 3.67} {:y 0.2518, :x 3.72} {:y 0.2774, :x 3.78} {:y 0.3036, :x 3.83} {:y 0.33, :x 3.88} {:y 0.3562, :x 3.94} {:y 0.3814, :x 3.99} {:y 0.4053, :x 4.05} {:y 0.427, :x 4.1} {:y 0.446, :x 4.15} {:y 0.4618, :x 4.21} {:y 0.4737, :x 4.26} {:y 0.4813, :x 4.31} {:y 0.4842, :x 4.37} {:y 0.482, :x 4.42} {:y 0.4748, :x 4.48} {:y 0.4625, :x 4.53} {:y 0.4452, :x 4.58} {:y 0.4236, :x 4.64} {:y 0.3979, :x 4.69} {:y 0.369, :x 4.75} {:y 0.3376, :x 4.8} {:y 0.3047, :x 4.85} {:y 0.2711, :x 4.91} {:y 0.2376, :x 4.96} {:y 0.2052, :x 5.02} {:y 0.1745, :x 5.07} {:y 0.146, :x 5.12} {:y 0.1202, :x 5.18} {:y 0.0973, :x 5.23} {:y 0.0774, :x 5.29} {:y 0.0605, :x 5.34} {:y 0.0465, :x 5.39} {:y 0.0351, :x 5.45} {:y 0.0259, :x 5.5} {:y 0.0188, :x 5.55} {:y 0.0134, :x 5.61} {:y 0.0094, :x 5.66} {:y 0.0064, :x 5.72} {:y 0.0043, :x 5.77} {:y 0.0028, :x 5.82} {:y 0.0018, :x 5.88} {:y 0.0011, :x 5.93} {:y 7.0E-4, :x 5.99} {:y 4.0E-4, :x 6.04} {:y 3.0E-4, :x 6.09}]}}], :resolve {:scale {"x" "independent", "y" "independent"}}, :height 300}]}}]
