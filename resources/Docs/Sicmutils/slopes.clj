[{:ed3 {:label "Specs", :opts {:order :row, :eltsper 1, :size "auto", :wrapfn {:tid :ed3, :$split nil, :out-width "1300px", :fn [quote editor-repl-tab], :layout :left-right, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n:cljs\n\n(def base\n  {:$schema \"https://vega.github.io/schema/vega-lite/v5.json\",\n :data {:url \"https://raw.githubusercontent.com/vega/vega-datasets/next/data/stocks.csv\"},\n :width 400,\n :height 300,\n :layer\n [{:encoding\n   {:x {:field \"date\", :type \"temporal\"},\n    :y {:field \"price\", :type \"quantitative\"},\n    :color {:field \"symbol\", :type \"nominal\"}},\n   :layer\n   [{:mark \"line\"}\n    {:params\n     [{:name \"label\",\n       :select\n       {:type \"point\",\n        :encodings [\"x\"],\n        :nearest true,\n        :on \"mouseover\"}}],\n     :mark \"point\",\n     :encoding\n     {:opacity\n      {:condition {:param \"label\", :empty false, :value 1},\n       :value 0}}}]}\n  {:transform [{:filter {:param \"label\", :empty false}}],\n   :layer\n   [{:mark {:type \"rule\", :color \"gray\"},\n     :encoding\n     {:x {:type \"temporal\", :field \"date\", :aggregate \"min\"}}}\n    {:encoding\n     {:text {:type \"quantitative\", :field \"price\"},\n      :x {:type \"temporal\", :field \"date\"},\n      :y {:type \"quantitative\", :field \"price\"}},\n     :layer\n     [{:mark\n       {:type \"text\",\n        :stroke \"white\",\n        :strokeWidth 2,\n        :align \"left\",\n        :dx 5,\n        :dy -5}}\n      {:mark {:type \"text\", :align \"left\", :dx 5, :dy -5},\n       :encoding {:color {:type \"nominal\", :field \"symbol\"}}}]}]}]})\n\n(def ptselect-layer\n  {:params\n   [{:name \"label\",\n     :select\n     {:type \"point\",\n      :encodings [\"x\"],\n      :nearest true,\n      :on \"mouseover\"}}],\n   :mark \"point\",\n   :encoding\n   {:opacity\n    {:condition {:param \"label\", :empty false, :value 1},\n     :value 0}}})\n\n(def xform-layer\n  {:transform [{:filter {:param \"label\", :empty false}}],\n   :layer\n   [{:mark {:type \"rule\", :color \"gray\"},\n     :encoding\n     {:x {:type \"temporal\", :field \"date\", :aggregate \"min\"}}}\n    {:encoding\n     {:text {:type \"quantitative\", :field \"price\"},\n      :x {:type \"temporal\", :field \"date\"},\n      :y {:type \"quantitative\", :field \"price\"}},\n     :layer\n     [{:mark\n       {:type \"text\",\n        :stroke \"white\",\n        :strokeWidth 2,\n        :align \"left\",\n        :dx 5,\n        :dy -5}}\n      {:mark {:type \"text\", :align \"left\", :dx 5, :dy -5},\n       :encoding {:color {:type \"nominal\", :field \"symbol\"}}}]}]})\n\n\n\n\n(def ptselect\n  (-> {:mark :point\n       :encoding :ENCODING\n       :params [{:name :pname> :select :pselect>}]}\n    (assoc :aerial.hanami.templates/defaults\n           {:OPACITY {:condition {:param :pname> :empty :empty> :value 1}\n                      :value 0}\n            :ENCODING {:opacity :OPACITY}\n            :pname> \"pselect\" :empty> false\n            :pselect> {:type :point :encodings :encodings>\n                       :nearest :nearest> :on :mouseover}\n            :encodings> [\"x\"] :nearest> true\n            })))\n\n(def slope-rule\n  {:mark (merge ht/mark-base {:type \"rule\"})\n   :transform [{:filter {:param :pname>, :empty false}}]\n   :encoding (assoc ht/xy-encoding\n                    :y2 {:field :Y2 :type :Y2TYPE :bin :Y2BIN\n                         :axis :Y2AXIS :scale :Y2SCALE :sort :Y2SORT\n                          :aggregate :Y2AGG}\n                    :x2 {:field :X2 :type :X2TYPE :bin :X2BIN\n                         :axis :X2AXIS :scale :X2SCALE :sort :X2SORT\n                         :aggregate :X2AGG})\n   :aerial.hanami.templates/defaults\n   {:MCOLOR \"red\"\n    :XSCALE {:zero false} :YSCALE {:zero false}\n    :X2SCALE {:zero false} :Y2SCALE {:zero false}\n    :X2 :x2 :X2TYPE :quantitative :Y2 :y :Y2TYPE :quantitative\n    :X2BIN hc/RMV :X2AXIS hc/RMV :X2SORT hc/RMV :X2AGG hc/RMV\n    :Y2BIN hc/RMV :Y2AXIS hc/RMV :Y2SORT hc/RMV :Y2AGG hc/RMV}})\n\n\n(hc/xform ptselect :pname> \"label\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:none\n\n(hc/xform\n ht/layer-chart\n :FID :f1 :VID :v1\n :UDATA \"https://raw.githubusercontent.com/vega/vega-datasets/next/data/stocks.csv\"\n :X :date :XTYPE :temporal :Y :price\n :COLOR \"symbol\" :TOOLTIP hc/RMV\n :LAYER [{:encoding :ENCODING\n          :layer [ht/line-layer\n                  ptselect-layer]}\n         xform-layer])\n\n\n(hc/xform\n ht/layer-chart\n :FID :f1 :VID :v1\n :UDATA \"https://raw.githubusercontent.com/vega/vega-datasets/next/data/stocks.csv\"\n :X :date :XTYPE :temporal :Y :price\n :COLOR \"symbol\" :pname> \"label\"\n :LAYER [{:encoding :ENCODING\n          :layer [(dissoc ht/line-layer :encoding)\n                  ptselect]}\n         xform-layer])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", :out-height "900px", :eid "ed-ed3", :height "900px"}}, :specs []}} {:ed32 {:label "Code", :opts {:order :row, :eltsper 1, :size "auto", :wrapfn {:tid :ed32, :$split nil, :out-width "1300px", :fn [quote editor-repl-tab], :layout :left-right, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n:cljs\n\n\n(defn roundit [r & {:keys [places] :or {places 4}}]\n  (let [n (Math/pow 10.0 places)]\n    (-> r (* n) Math/round (/ n))))\n\n(defn slope-at\n  \"Estimate the slope of the function f at the point x\n  using accuracy delt\"\n  [f delt x]\n  (/ (- (f (+ x delt)) (f (- x delt))) (* 2 delt)))\n\n(defn x**2 [x] (* x x))\n\n(defn lfn [x a b] (+ (* a x) b))\n\n;;; y = ax + b\n(def testdata\n  (mapv (fn[x]\n          (let [delta 0.01\n                dd (* 50 delta)\n                a (slope-at x**2 delta x)\n                y (x**2 x)\n                x1 (- x dd)\n                x2 (+ x dd)\n                b (- (* a x) y)\n                offset (- (lfn x a b) y)\n                y1 (- (lfn x1 a b) offset)\n                y2 (- (lfn x2 a b) offset)]\n            (mapv roundit [x y x1 y1 x2 y2 a])))\n        (range 0 3 0.1)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", :out-height "900px", :eid "ed-ed32", :height "900px"}}, :specs []}} {:chap3 {:label "Vis", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :chap3, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 0}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n\n\n\n(let [data (mapv (fn[[x y x1 y1 x2 y2 a]]\n                   {:x x :y y :slope a\n                    :x1 x1 :y1 y1 :x2 x2 :y2 y2 :ftype \"f\"})\n                 testdata)]\n  (hc/xform\n   ht/layer-chart\n   :FID :f1 :VID :v1\n   :DATA data\n   :COLOR \"ftype\" :pname> \"slope\"\n   :WIDTH 600 :HEIGHT 600\n   :TOOLTIP [:XTTIP :YTTIP {:field :slope}]\n   :LAYER [{:encoding :ENCODING\n            :layer [{:mark {:type \"line\"}}\n                    ptselect]}\n           (hc/xform\n            slope-rule\n            :DATA data\n            :X :x1 :Y :y1 :X2 :x2 :Y2 :y2\n            :TOOLTIP [:XTTIP :YTTIP {:field :x2} {:field :y2}\n                      {:field :slope}])]))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(hc/xform\n ht/layer-chart\n :FID :f2 :VID :v2\n :UDATA \"https://raw.githubusercontent.com/vega/vega-datasets/next/data/stocks.csv\"\n :X :date :XTYPE :temporal :Y :price\n :COLOR \"symbol\" :pname> \"label\"\n :LAYER [{:encoding :ENCODING\n          :layer [(dissoc ht/line-layer :encoding)\n                  ptselect]}\n         xform-layer])\n\n\n(hc/xform\n (assoc base :usermeta :USERDATA)\n :FID :f3 :VID :v3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", :out-height "100px", :eid "ed-chap3", :height "790px"}}, :specs [{:usermeta {:frame {:pos :after, :at :end, :fid :f1}, :vid :v1, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Chap3", :id :chap3, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}, :width 600, :background "floralwhite", :layer [{:encoding {:y {:field "y", :type "quantitative"}, :color {:field "ftype", :type "nominal"}, :x {:field "x", :type "quantitative"}, :tooltip [{:field "x", :type "quantitative"} {:field "y", :type "quantitative"} {:field :slope}]}, :layer [{:mark {:type "line"}} {:encoding {:opacity {:value 0, :condition {:value 1, :empty false, :param "slope"}}}, :mark :point, :params [{:name "slope", :select {:nearest true, :type :point, :encodings ["x"], :on :mouseover}}]}]} {:encoding {:y {:scale {:zero false}, :field :y1, :type "quantitative"}, :x {:scale {:zero false}, :field :x1, :type "quantitative"}, :y2 {:scale {:zero false}, :field :y2, :type :quantitative}, :x2 {:scale {:zero false}, :field :x2, :type :quantitative}, :tooltip [{:field :x1, :type "quantitative"} {:field :y1, :type "quantitative"} {:field :x2} {:field :y2} {:field :slope}]}, :transform [{:filter {:empty false, :param "slope"}}], :mark {:color "red", :type "rule"}}], :height 600, :data {:values [{:y 0, :y1 0, :slope 0, :ftype "f", :x 0, :x1 -0.5, :y2 0, :x2 0.5} {:y 0.01, :y1 -0.09, :slope 0.2, :ftype "f", :x 0.1, :x1 -0.4, :y2 0.11, :x2 0.6} {:y 0.04, :y1 -0.16, :slope 0.4, :ftype "f", :x 0.2, :x1 -0.3, :y2 0.24, :x2 0.7} {:y 0.09, :y1 -0.21, :slope 0.6, :ftype "f", :x 0.3, :x1 -0.2, :y2 0.39, :x2 0.8} {:y 0.16, :y1 -0.24, :slope 0.8, :ftype "f", :x 0.4, :x1 -0.1, :y2 0.56, :x2 0.9} {:y 0.25, :y1 -0.25, :slope 1, :ftype "f", :x 0.5, :x1 0, :y2 0.75, :x2 1} {:y 0.36, :y1 -0.24, :slope 1.2, :ftype "f", :x 0.6, :x1 0.1, :y2 0.96, :x2 1.1} {:y 0.49, :y1 -0.21, :slope 1.4, :ftype "f", :x 0.7, :x1 0.2, :y2 1.19, :x2 1.2} {:y 0.64, :y1 -0.16, :slope 1.6, :ftype "f", :x 0.8, :x1 0.3, :y2 1.44, :x2 1.3} {:y 0.81, :y1 -0.09, :slope 1.8, :ftype "f", :x 0.9, :x1 0.4, :y2 1.71, :x2 1.4} {:y 1, :y1 0, :slope 2, :ftype "f", :x 1, :x1 0.5, :y2 2, :x2 1.5} {:y 1.21, :y1 0.11, :slope 2.2, :ftype "f", :x 1.1, :x1 0.6, :y2 2.31, :x2 1.6} {:y 1.44, :y1 0.24, :slope 2.4, :ftype "f", :x 1.2, :x1 0.7, :y2 2.64, :x2 1.7} {:y 1.69, :y1 0.39, :slope 2.6, :ftype "f", :x 1.3, :x1 0.8, :y2 2.99, :x2 1.8} {:y 1.96, :y1 0.56, :slope 2.8, :ftype "f", :x 1.4, :x1 0.9, :y2 3.36, :x2 1.9} {:y 2.25, :y1 0.75, :slope 3, :ftype "f", :x 1.5, :x1 1, :y2 3.75, :x2 2} {:y 2.56, :y1 0.96, :slope 3.2, :ftype "f", :x 1.6, :x1 1.1, :y2 4.16, :x2 2.1} {:y 2.89, :y1 1.19, :slope 3.4, :ftype "f", :x 1.7, :x1 1.2, :y2 4.59, :x2 2.2} {:y 3.24, :y1 1.44, :slope 3.6, :ftype "f", :x 1.8, :x1 1.3, :y2 5.04, :x2 2.3} {:y 3.61, :y1 1.71, :slope 3.8, :ftype "f", :x 1.9, :x1 1.4, :y2 5.51, :x2 2.4} {:y 4, :y1 2, :slope 4, :ftype "f", :x 2, :x1 1.5, :y2 6, :x2 2.5} {:y 4.41, :y1 2.31, :slope 4.2, :ftype "f", :x 2.1, :x1 1.6, :y2 6.51, :x2 2.6} {:y 4.84, :y1 2.64, :slope 4.4, :ftype "f", :x 2.2, :x1 1.7, :y2 7.04, :x2 2.7} {:y 5.29, :y1 2.99, :slope 4.6, :ftype "f", :x 2.3, :x1 1.8, :y2 7.59, :x2 2.8} {:y 5.76, :y1 3.36, :slope 4.8, :ftype "f", :x 2.4, :x1 1.9, :y2 8.16, :x2 2.9} {:y 6.25, :y1 3.75, :slope 5, :ftype "f", :x 2.5, :x1 2, :y2 8.75, :x2 3} {:y 6.76, :y1 4.16, :slope 5.2, :ftype "f", :x 2.6, :x1 2.1, :y2 9.36, :x2 3.1} {:y 7.29, :y1 4.59, :slope 5.4, :ftype "f", :x 2.7, :x1 2.2, :y2 9.99, :x2 3.2} {:y 7.84, :y1 5.04, :slope 5.6, :ftype "f", :x 2.8, :x1 2.3, :y2 10.64, :x2 3.3} {:y 8.41, :y1 5.51, :slope 5.8, :ftype "f", :x 2.9, :x1 2.4, :y2 11.31, :x2 3.4}]}}]}}]
