[{:tab1 {:label "Overview", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :tab1, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 1}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n\n(hc/xform\n ht/empty-chart\n :FID :f1\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"19px\" :width \"800px\"}}\n\"\n## Overview\n\n* Preliminaries\n* Capabilities\n* Editors\n* Keys\n* Code Execution\n* Control panel\n* Tabs\n* Live examples\n\n\"]\n\n]]])", :out-height "200px", :eid "ed-tab1", :height "900px"}}, :specs [{:usermeta {:frame {:top [[gap :size "200px"] [v-box :gap "10px" :children [[md {:style {:font-size "19px", :width "800px"}} "\n## Overview\n\n* Preliminaries\n* Capabilities\n* Editors\n* Keys\n* Code Execution\n* Control panel\n* Tabs\n* Live examples\n\n"]]]], :pos :after, :at :end, :fid :f1, :left [[p {:style {:min-width "50px", :width "50px"}}]]}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Tab1", :id :tab1, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}}]}} {:tab8 {:label "Preliminaries", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :tab8, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 1}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n(hc/xform\n ht/empty-chart\n :FID :f1\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"19px\" :width \"800px\"}}\n\"\n## Preliminaries\n\n### Web Sites\n* [Saite](https://github.com/jsa-aerial/saite)\n* [Aerosaite](https://github.com/jsa-aerial/aerosaite)\n\n### Installation\n* Example (live)\n\n### Configuring\n* [~/.saite/config.edn](https://github.com/jsa-aerial/aerosaite/blob/main/resources/config.edn)\n\n\"]\n\n]]])", :out-height "100px", :eid "ed-tab8", :height "800px"}}, :specs [{:usermeta {:tab {:id :tab8, :label "Tab8", :opts {:order :row, :eltsper 2, :rgap "20px", :cgap "20px", :size "auto"}}, :frame {:top [[gap :size "200px"] [v-box :gap "10px" :children [[md {:style {:font-size "19px", :width "800px"}} "\n## Preliminaries\n\n### Web Sites\n* [Saite](https://github.com/jsa-aerial/saite)\n* [Aerosaite](https://github.com/jsa-aerial/aerosaite)\n\n### Installation\n* Example (live)\n\n### Configuring\n* [~/.saite/config.edn](https://github.com/jsa-aerial/aerosaite/blob/main/resources/config.edn)\n\n"]]]], :left [[p {:style {:width "50px", :min-width "50px"}}]], :fid :f1, :at :end, :pos :after}, :opts {:export {:png true, :svg true}, :scaleFactor 1, :editor true, :source false, :renderer "canvas", :mode "vega-lite"}, :msgop :tabs, :session-name "Exploring"}}]}} {:tab3 {:label "Capabilities", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :tab3, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 1}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n(hc/xform\n ht/empty-chart\n :FID :f1\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"19px\" :width \"800px\"}}\n\"\n## Capabilities\n\n### Strong Dynamic dependencies\n* No need to setup a project before diving in\n\n### Dynamic data exploration\n* Example 'Bos11' (live)\n\n### Interactive documents\n* Example 'Amplicon' (live)\n\n### Full client/server dashboards\n* Example 'OmicsRMA' (live)\n\n\"]\n\n]]])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:end", :out-height "200px", :eid "ed-tab3", :height "900px"}}, :specs [{:usermeta {:frame {:top [[gap :size "200px"] [v-box :gap "10px" :children [[md {:style {:font-size "19px", :width "800px"}} "\n## Capabilities\n\n### Strong Dynamic dependencies\n* No need to setup a project before diving in\n\n### Dynamic data exploration\n* Example 'Bos11' (live)\n\n### Interactive documents\n* Example 'Amplicon' (live)\n\n### Full client/server dashboards\n* Example 'OmicsRMA' (live)\n\n"]]]], :pos :after, :at :end, :fid :f1, :left [[p {:style {:min-width "50px", :width "50px"}}]]}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Tab3", :id :tab3, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}}]}} {:tab4 {:label "Editors", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :tab4, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 1}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n(hc/xform\n ht/empty-chart\n :FID :f1\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"19px\" :width \"800px\"}}\n\"\n## Editors\n\n### Base variants\n  - Emacs\n  - Vim\n  - Sublime\n\n### CodeMirror implementations\n  - Written in JS\n\n### Editors are programmable with ClojureScript\n  - Enables direct structural editing and code transformations\n  - No need for macros\n  - Wide range of scopes\n    - Individual forms\n    - Groups of forms\n    - Entire buffers\n\n### Key bindings\n  - Large range of customizable key bindings\n  - Default actions for base editors\n  - Paredit functions\n  - Saite functions\n  - See [std keys and functions](https://github.com/jsa-aerial/saite/blob/master/doc/std-key-maps.md)\n\n\"]\n\n]]])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:end", :out-height "100px", :eid "ed-tab4", :height "800px"}}, :specs [{:usermeta {:frame {:top [[gap :size "200px"] [v-box :gap "10px" :children [[md {:style {:font-size "19px", :width "800px"}} "\n## Editors\n\n### Base variants\n  - Emacs\n  - Vim\n  - Sublime\n\n### CodeMirror implementations\n  - Written in JS\n\n### Editors are programmable with ClojureScript\n  - Enables direct structural editing and code transformations\n  - No need for macros\n  - Wide range of scopes\n    - Individual forms\n    - Groups of forms\n    - Entire buffers\n\n### Key bindings\n  - Large range of customizable key bindings\n  - Default actions for base editors\n  - Paredit functions\n  - Saite functions\n  - See [std keys and functions](https://github.com/jsa-aerial/saite/blob/master/doc/std-key-maps.md)\n\n"]]]], :pos :after, :at :end, :fid :f1, :left [[p {:style {:min-width "50px", :width "50px"}}]]}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Tab4", :id :tab4, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}}]}} {:tab7 {:label "Keys", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :tab7, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 1}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n\n(hc/xform\n ht/empty-chart\n :FID :f1\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"16px\" :width \"800px\"}}\n\"\n## Some most used **Saite** keybindings\n\n### Docs and hints\n\n* `Ctrl-X D`  : Show JVM engine doc string\n* `Ctrl-X H`  : Show JS engine help string\n* `Ctrl-X S`  : Show source\n* `F9`        : Show hint completions for JVM engine\n* `Ctrl-F9`   : Show hint completions for JS engine\n\n### Code execution\n\n* `Ctrl-X Ctrl-E` : Evaluate last sexpression\n* `Ctrl-X Ctrl-C` : Evaluate outer sexpression at cursor\n* `Ctrl-X J`      : Evaluate last sexpression _on the JVM_\n* `Ctrl-X Ctrl-J` : Evaluate outer sexpession _on the JVM_\n* `Ctrl-X Ctrl-M` : Evaluate mixed code (synonym for `ctrl-x ctrl-c`)\n\n### Frame Editing and visualization\n\n#### Shortcuts creating frame layouts\n\n* `Ctrl-Alt-T` : Insert shortcut of text only (empty) frame\n* `Ctrl-Alt-V` : Insert shortcut of visualization frame\n* `Ctrl-Alt-C` : Insert shortcut of CodeMirror markdown element\n* `Ctrl-Alt-M` : Insert shortcut of markdown element\n* `Ctrl-Alt-\\\\` : Insert shortcut of LaTex element\n* `Ctrl-Alt-D` : Insert shortcut of tab MD defaults\n\n#### Insert and delete frames\n* `Ctrl-X Ctrl-I` : Insert frame defined by outer sexpression at cursor\n* `Insert` : synonym for `ctrl-x ctrl-i`\n* `Ctrl-X Ctrl-D` : Delete frame associated with outer sexpression at cursor\n* `Delete` : synonym for `ctrl-x ctrl-d`\n\n### These, and many others, always available in quick help popup\n\"]\n\n]]])", :out-height "100px", :eid "ed-tab7", :height "800px"}}, :specs [{:usermeta {:frame {:top [[gap :size "200px"] [v-box :gap "10px" :children [[md {:style {:font-size "16px", :width "800px"}} "\n## Some most used **Saite** keybindings\n\n### Docs and hints\n\n* `Ctrl-X D`  : Show JVM engine doc string\n* `Ctrl-X H`  : Show JS engine help string\n* `Ctrl-X S`  : Show source\n* `F9`        : Show hint completions for JVM engine\n* `Ctrl-F9`   : Show hint completions for JS engine\n\n### Code execution\n\n* `Ctrl-X Ctrl-E` : Evaluate last sexpression\n* `Ctrl-X Ctrl-C` : Evaluate outer sexpression at cursor\n* `Ctrl-X J`      : Evaluate last sexpression _on the JVM_\n* `Ctrl-X Ctrl-J` : Evaluate outer sexpession _on the JVM_\n* `Ctrl-X Ctrl-M` : Evaluate mixed code (synonym for `ctrl-x ctrl-c`)\n\n### Frame Editing and visualization\n\n#### Shortcuts creating frame layouts\n\n* `Ctrl-Alt-T` : Insert shortcut of text only (empty) frame\n* `Ctrl-Alt-V` : Insert shortcut of visualization frame\n* `Ctrl-Alt-C` : Insert shortcut of CodeMirror markdown element\n* `Ctrl-Alt-M` : Insert shortcut of markdown element\n* `Ctrl-Alt-\\` : Insert shortcut of LaTex element\n* `Ctrl-Alt-D` : Insert shortcut of tab MD defaults\n\n#### Insert and delete frames\n* `Ctrl-X Ctrl-I` : Insert frame defined by outer sexpression at cursor\n* `Insert` : synonym for `ctrl-x ctrl-i`\n* `Ctrl-X Ctrl-D` : Delete frame associated with outer sexpression at cursor\n* `Delete` : synonym for `ctrl-x ctrl-d`\n\n### These, and many others, always available in quick help popup\n"]]]], :pos :after, :at :end, :fid :f1, :left [[p {:style {:min-width "50px", :width "50px"}}]]}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Tab7", :id :tab7, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}}]}} {:tab5 {:label "Code Execution", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :tab5, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 2, :fm 2}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n(hc/xform\n ht/empty-chart\n :FID :f1\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"19px\" :width \"800px\"}}\n\"\n## Code execution\n\n* Run form in JS engine\n  - Synchronous\n\n* Run form on JVM\n  - Asynchronous\n  - Can run multiple\n\n* Run mixed code\n  - Client (JS/ClJS) controls the flow\n  - Intermixed execution *appears* synchronous\n  - Implemented via rewriting to promise chains\n\n![img]( https://github.com/jsa-aerial/aerosaite/blob/main/doc/images/saite-client-server.png?raw=true)\n\"\n]\n[cm :id \"cm2\" :fid :FID :height \"280px\" :width \"600px\"\n :src\n\"\n(defmethod hmi/user-msg :eval-clj [msg]\n  (try+ msg\n   (let [codeinfo (msg :data)\n         {:keys [uid chankey nssym code]} codeinfo\n         nssym (if (string? nssym) (symbol nssym) nssym)\n         code (if (string? code) (read-string code) code)\n         res (binding [*ns* (find-ns nssym)]\n               (eval code))\n         _ (vswap! tryres (fn[_] res))\n         res (chk-and-xform-res res)\n         msg {:op :evalres :data {:chankey chankey :value res}}]\n     (hmi/send-msg (uid :name) msg))))\n\"]\n]]])\n\n\n\n(hc/xform\n ht/empty-chart\n :FID :f2\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"16px\" :width \"800px\"}}\n\"\n\n\"]\n\n]]])", :out-height "100px", :eid "ed-tab5", :height "800px"}}, :specs [{:usermeta {:frame {:top [[gap :size "200px"] [v-box :gap "10px" :children [[md {:style {:font-size "19px", :width "800px"}} "\n## Code execution\n\n* Run form in JS engine\n  - Synchronous\n\n* Run form on JVM\n  - Asynchronous\n  - Can run multiple\n\n* Run mixed code\n  - Client (JS/ClJS) controls the flow\n  - Intermixed execution *appears* synchronous\n  - Implemented via rewriting to promise chains\n\n![img]( https://github.com/jsa-aerial/aerosaite/blob/main/doc/images/saite-client-server.png?raw=true)\n"] [cm :id "cm2" :fid :f1 :height "280px" :width "600px" :src "\n(defmethod hmi/user-msg :eval-clj [msg]\n  (try+ msg\n   (let [codeinfo (msg :data)\n         {:keys [uid chankey nssym code]} codeinfo\n         nssym (if (string? nssym) (symbol nssym) nssym)\n         code (if (string? code) (read-string code) code)\n         res (binding [*ns* (find-ns nssym)]\n               (eval code))\n         _ (vswap! tryres (fn[_] res))\n         res (chk-and-xform-res res)\n         msg {:op :evalres :data {:chankey chankey :value res}}]\n     (hmi/send-msg (uid :name) msg))))\n"]]]], :pos :after, :at :end, :fid :f1, :left [[p {:style {:min-width "50px", :width "50px"}}]]}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Tab5", :id :tab5, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}}]}} {:tab2 {:label "Control Panel", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :tab2, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 1}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n(hc/xform\n ht/empty-chart\n :FID :f1\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"19px\" :width \"800px\"}}\n\"\n## Controls panel\n* Logo\n* Session marker\n* Application spinner\n* Load and save group\n  - Documents\n  - Code files\n* Editor visibility group\n  - Open (show)\n  - Close (hide)\n* Tab manipulation group\n  - Add\n  - Duplicate\n  - Frame mgt\n  - Undo and Redo\n  - Left/right movement\n  - Edit\n  - Delete\n* Info group\n  - Theme\n  - Quick help\n  - Documentation\n\n\"]\n\n]]])", :out-height "200px", :eid "ed-tab2", :height "900px"}}, :specs [{:usermeta {:frame {:top [[gap :size "200px"] [v-box :gap "10px" :children [[md {:style {:font-size "19px", :width "800px"}} "\n## Controls panel\n* Logo\n* Session marker\n* Application spinner\n* Load and save group\n  - Documents\n  - Code files\n* Editor visibility group\n  - Open (show)\n  - Close (hide)\n* Tab manipulation group\n  - Add\n  - Duplicate\n  - Frame mgt\n  - Undo and Redo\n  - Left/right movement\n  - Edit\n  - Delete\n* Info group\n  - Theme\n  - Quick help\n  - Documentation\n\n"]]]], :pos :after, :at :end, :fid :f1, :left [[p {:style {:min-width "50px", :width "50px"}}]]}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Tab2", :id :tab2, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}}]}} {:tab6 {:label "Tabs", :opts {:order :row, :eltsper 1, :rgap "20px", :cgap "20px", :size "auto", :wrapfn {:tid :tab6, :$split 0, :out-width "730px", :fn [quote interactive-doc-tab], :cmfids {:cm 0, :fm 1}, :ns doc.code, :ed-out-order :first-last, :width "730px", :md-defaults nil, :src "\n\n\n(hc/xform\n ht/empty-chart\n :FID :f1\n :LEFT '[[p {:style {:width \"50px\" :min-width \"50px\"}}]]\n :TOP '[[gap :size \"200px\"]\n        [v-box :gap \"10px\"\n         :children\n         [[md {:style {:font-size \"19px\" :width \"800px\"}}\n\"\n## Tabs\n\n### Used for organizing :\n  - Templates and widgets\n  - Code\n  - Presentations\n  - Overall document/dashboard\n  - Have namespaces associated with them\n    - Batteries included\n    - Synched between JVM and JS\n\n### Two basic types\n  - Editor with output pane\n    - For code and data exploration\n  - Editor with document body / frame canvas\n    - Interactive presentations\n    - Dashboards\n    - Can closeup associated editor panel\n    - Typically, \\\"the main event\\\"\n\n### Example (live)\n    \n\"]\n\n]]])", :out-height "100px", :eid "ed-tab6", :height "800px"}}, :specs [{:usermeta {:frame {:top [[gap :size "200px"] [v-box :gap "10px" :children [[md {:style {:font-size "19px", :width "800px"}} "\n## Tabs\n\n### Used for organizing :\n  - Templates and widgets\n  - Code\n  - Presentations\n  - Overall document/dashboard\n  - Have namespaces associated with them\n    - Batteries included\n    - Synched between JVM and JS\n\n### Two basic types\n  - Editor with output pane\n    - For code and data exploration\n  - Editor with document body / frame canvas\n    - Interactive presentations\n    - Dashboards\n    - Can closeup associated editor panel\n    - Typically, \"the main event\"\n\n### Example (live)\n    \n"]]]], :pos :after, :at :end, :fid :f1, :left [[p {:style {:min-width "50px", :width "50px"}}]]}, :session-name "Exploring", :opts {:mode "vega-lite", :source false, :export {:png true, :svg true}, :renderer "canvas", :scaleFactor 1, :editor true}, :msgop :tabs, :tab {:label "Tab6", :id :tab6, :opts {:eltsper 2, :size "auto", :rgap "20px", :cgap "20px", :order :row}}}}]}}]
